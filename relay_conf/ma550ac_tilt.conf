# ma550ac

[Publishers]
xtilt:
  {
    'name': '/xtilt',
    'data_class': std_msgs.msg.Float64,
    'latch': True,
    'queue_size': 1,
  }

ytilt:
  {
    'name': '/ytilt',
    'data_class': std_msgs.msg.Float64,
    'latch': True,
    'queue_size': 1,
  }

[Subscribers]
tilt:
  {
    'name': '/tilt',
    'data_class': std_msgs.msg.Float64,
    'queue_size': 1,
  }

[Logic]
code:
    def decode_fixpoint_number(bytes_, q, endian='little', signed=True):
        d = int.from_bytes(bytes_, byteorder=endian, signed=signed)
        return d / 2**q
    x = decode_fixpoint_number(tilt[:4], q=29) * 3600
    y = decode_fixpoint_number(tilt[4:], q=29) * 3600
    xtilt.pubulish(x)
    ytilt.pubulish(y)